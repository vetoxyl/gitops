name: "veto iac"
on:
   push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
   pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
    AWS_REGION: us-west-2
    EKS_CLUSTER: veto-eks


jobs:
  terraform:
    name: "Apply terraform changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2.0.0  
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: format
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true
        # This will allow the workflow to continue even if the plan fails

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: |
          echo "Terraform plan failed. Please check the plan output."
          exit 1
        # This will fail the workflow if the plan fails   
        
